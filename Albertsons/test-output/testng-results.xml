<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="2" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-06T15:24:25 IST" name="Suite" finished-at="2024-02-06T15:24:31 IST" duration-ms="6683">
    <groups>
      <group name="functional">
        <method signature="demo.test2()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test2" class="BaseMethod.demo"/>
      </group> <!-- functional -->
      <group name="regression">
        <method signature="demo.test2()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test2" class="BaseMethod.demo"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="demo.test1()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test1" class="BaseMethod.demo"/>
        <method signature="demo.test2()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test2" class="BaseMethod.demo"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="demo.test1()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test1" class="BaseMethod.demo"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2024-02-06T15:24:25 IST" name="Test" finished-at="2024-02-06T15:24:31 IST" duration-ms="6683">
      <class name="BaseMethod.demo">
        <test-method is-config="true" signature="initialiseReports()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T15:24:24 IST" name="initialiseReports" finished-at="2024-02-06T15:24:25 IST" duration-ms="304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiseReports -->
        <test-method is-config="true" signature="initialiseBrowser(org.testng.ITestContext)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T15:24:25 IST" name="initialiseBrowser" finished-at="2024-02-06T15:24:28 IST" duration-ms="3295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4c51077d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiseBrowser -->
        <test-method is-config="true" signature="getStatus(java.lang.reflect.Method)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T15:24:28 IST" name="getStatus" finished-at="2024-02-06T15:24:28 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseMethod.demo.test1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatus -->
        <test-method signature="test1()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T15:24:28 IST" name="test1" finished-at="2024-02-06T15:24:29 IST" duration-ms="1076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="getGroupStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T15:24:29 IST" name="getGroupStatus" finished-at="2024-02-06T15:24:29 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseMethod.demo.test1()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=demo.test1()[pri:0, instance:BaseMethod.demo@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGroupStatus -->
        <test-method is-config="true" signature="getStatus(java.lang.reflect.Method)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T15:24:29 IST" name="getStatus" finished-at="2024-02-06T15:24:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseMethod.demo.test2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatus -->
        <test-method signature="test2()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T15:24:29 IST" name="test2" finished-at="2024-02-06T15:24:31 IST" duration-ms="2006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="getGroupStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T15:24:31 IST" name="getGroupStatus" finished-at="2024-02-06T15:24:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseMethod.demo.test2()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test2 status=SUCCESS method=demo.test2()[pri:0, instance:BaseMethod.demo@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGroupStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T15:24:31 IST" name="tearDown" finished-at="2024-02-06T15:24:31 IST" duration-ms="220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T15:24:31 IST" name="flushReports" finished-at="2024-02-06T15:24:32 IST" duration-ms="1000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- BaseMethod.demo -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
