<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-06T10:19:49 IST" name="Suite" finished-at="2024-02-06T10:19:57 IST" duration-ms="7837">
    <groups>
      <group name="functional">
        <method signature="demo.test2()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test2" class="BaseMethod.demo"/>
      </group> <!-- functional -->
      <group name="regression">
        <method signature="demo.test2()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test2" class="BaseMethod.demo"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="demo.test1()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test1" class="BaseMethod.demo"/>
        <method signature="demo.test2()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test2" class="BaseMethod.demo"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="demo.test1()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test1" class="BaseMethod.demo"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2024-02-06T10:19:49 IST" name="Test" finished-at="2024-02-06T10:19:57 IST" duration-ms="7837">
      <class name="BaseMethod.demo">
        <test-method is-config="true" signature="initialiseReports()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T10:19:49 IST" name="initialiseReports" finished-at="2024-02-06T10:19:49 IST" duration-ms="288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiseReports -->
        <test-method is-config="true" signature="initialiseBrowser(org.testng.ITestContext)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T10:19:49 IST" name="initialiseBrowser" finished-at="2024-02-06T10:19:52 IST" duration-ms="2917" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@8aeab9e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiseBrowser -->
        <test-method is-config="true" signature="getStatus(java.lang.reflect.Method)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T10:19:52 IST" name="getStatus" finished-at="2024-02-06T10:19:52 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseMethod.demo.test1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatus -->
        <test-method signature="test1()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T10:19:52 IST" name="test1" finished-at="2024-02-06T10:19:54 IST" duration-ms="1110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="getGroupStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T10:19:54 IST" name="getGroupStatus" finished-at="2024-02-06T10:19:54 IST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseMethod.demo.test1()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=demo.test1()[pri:0, instance:BaseMethod.demo@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGroupStatus -->
        <test-method is-config="true" signature="getStatus(java.lang.reflect.Method)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T10:19:54 IST" name="getStatus" finished-at="2024-02-06T10:19:54 IST" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseMethod.demo.test2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatus -->
        <test-method signature="test2()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T10:19:54 IST" name="test2" finished-at="2024-02-06T10:19:56 IST" duration-ms="2218" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [google] but found [Your Store]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [google] but found [Your Store]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at BaseMethod.demo.test2(demo.java:139)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="getGroupStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T10:19:57 IST" name="getGroupStatus" finished-at="2024-02-06T10:19:57 IST" duration-ms="413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseMethod.demo.test2()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test2 status=FAILURE method=demo.test2()[pri:0, instance:BaseMethod.demo@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGroupStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T10:19:57 IST" name="tearDown" finished-at="2024-02-06T10:19:57 IST" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-06T10:19:57 IST" name="flushReports" finished-at="2024-02-06T10:19:59 IST" duration-ms="1189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- BaseMethod.demo -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
