<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-07T16:00:23 IST" name="Default suite" finished-at="2024-02-07T16:00:50 IST" duration-ms="27107">
    <groups>
      <group name="functional">
        <method signature="demo.test2()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test2" class="BaseMethod.demo"/>
        <method signature="demo.test3()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test3" class="BaseMethod.demo"/>
      </group> <!-- functional -->
      <group name="regression">
        <method signature="demo.test2()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test2" class="BaseMethod.demo"/>
      </group> <!-- regression -->
      <group name="smoke">
        <method signature="demo.test1()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test1" class="BaseMethod.demo"/>
        <method signature="demo.test2()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test2" class="BaseMethod.demo"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="demo.test1()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test1" class="BaseMethod.demo"/>
        <method signature="demo.test3()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test3" class="BaseMethod.demo"/>
      </group> <!-- sanity -->
      <group name="manual">
        <method signature="demo.test3()[pri:0, instance:BaseMethod.demo@24313fcc]" name="test3" class="BaseMethod.demo"/>
      </group> <!-- manual -->
    </groups>
    <test started-at="2024-02-07T16:00:23 IST" name="Default test" finished-at="2024-02-07T16:00:50 IST" duration-ms="27107">
      <class name="BaseMethod.demo">
        <test-method is-config="true" signature="initialiseReports()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-07T16:00:22 IST" name="initialiseReports" finished-at="2024-02-07T16:00:23 IST" duration-ms="719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiseReports -->
        <test-method is-config="true" signature="initialiseBrowser(org.testng.ITestContext)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-07T16:00:23 IST" name="initialiseBrowser" finished-at="2024-02-07T16:00:31 IST" duration-ms="7971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@648c5fb3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiseBrowser -->
        <test-method is-config="true" signature="getStatus(java.lang.reflect.Method)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-07T16:00:31 IST" name="getStatus" finished-at="2024-02-07T16:00:31 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseMethod.demo.test1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatus -->
        <test-method signature="test1()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-07T16:00:31 IST" name="test1" finished-at="2024-02-07T16:00:40 IST" duration-ms="8902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="getGroupStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-07T16:00:40 IST" name="getGroupStatus" finished-at="2024-02-07T16:00:40 IST" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseMethod.demo.test1()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=demo.test1()[pri:0, instance:BaseMethod.demo@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGroupStatus -->
        <test-method is-config="true" signature="getStatus(java.lang.reflect.Method)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-07T16:00:40 IST" name="getStatus" finished-at="2024-02-07T16:00:40 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseMethod.demo.test2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatus -->
        <test-method signature="test2()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-07T16:00:40 IST" name="test2" finished-at="2024-02-07T16:00:43 IST" duration-ms="3604" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[no such execution context
  (Session info: chrome=121.0.6167.140)
Build info: version: '4.12.1', revision: '8e34639b11'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b1d9309e6e96d2b3d555a896e4af6f41, get {url=http://localhost/opencart/upload/admin/}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 121.0.6167.140, chrome: {chromedriverVersion: 121.0.6167.85 (3f98d690ad7e..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51170}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51170/devtoo..., se:cdpVersion: 121.0.6167.140, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b1d9309e6e96d2b3d555a896e4af6f41]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: no such execution context
  (Session info: chrome=121.0.6167.140)
Build info: version: '4.12.1', revision: '8e34639b11'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b1d9309e6e96d2b3d555a896e4af6f41, get {url=http://localhost/opencart/upload/admin/}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 121.0.6167.140, chrome: {chromedriverVersion: 121.0.6167.85 (3f98d690ad7e..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51170}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51170/devtoo..., se:cdpVersion: 121.0.6167.140, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b1d9309e6e96d2b3d555a896e4af6f41
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:304)
at BaseMethod.demo.test2(demo.java:142)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="getGroupStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-07T16:00:43 IST" name="getGroupStatus" finished-at="2024-02-07T16:00:44 IST" duration-ms="601" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseMethod.demo.test2()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test2 status=FAILURE method=demo.test2()[pri:0, instance:BaseMethod.demo@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGroupStatus -->
        <test-method is-config="true" signature="getStatus(java.lang.reflect.Method)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-07T16:00:44 IST" name="getStatus" finished-at="2024-02-07T16:00:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseMethod.demo.test3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStatus -->
        <test-method signature="test3()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-07T16:00:44 IST" name="test3" finished-at="2024-02-07T16:00:49 IST" duration-ms="5108" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Administration] but found [Google]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Administration] but found [Google]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at BaseMethod.demo.test3(demo.java:152)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="getGroupStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-07T16:00:49 IST" name="getGroupStatus" finished-at="2024-02-07T16:00:49 IST" duration-ms="400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void BaseMethod.demo.test3()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=test3 status=FAILURE method=demo.test3()[pri:0, instance:BaseMethod.demo@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getGroupStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-07T16:00:49 IST" name="tearDown" finished-at="2024-02-07T16:00:50 IST" duration-ms="360" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:BaseMethod.demo@24313fcc]" started-at="2024-02-07T16:00:50 IST" name="flushReports" finished-at="2024-02-07T16:00:52 IST" duration-ms="2154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
      </class> <!-- BaseMethod.demo -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
